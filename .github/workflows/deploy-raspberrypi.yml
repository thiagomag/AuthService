name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Deploy manual

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Configurar o JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      # Step 2: Build com Gradle usando o JDK 21
      - name: Build with Gradle
        run: chmod +x ./gradlew && ./gradlew build

      # Step 3: Build imagem docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest .

      # Step 4: Login no docker hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 5: Push imagem docker para o Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production  # Especifica o environment "production" para este job
    if: github.event_name == 'workflow_dispatch'  # Executa o deploy apenas manualmente

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
            docker stop auth-service || true
            docker rm auth-service || true
            docker run -d --name auth-service -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
